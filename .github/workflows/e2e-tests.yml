---
name: E2E Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    # Run nightly at 3 AM UTC to save runner minutes
    - cron: '0 3 * * *'

jobs:
  # Job to detect which files have changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      e2e-relevant: ${{ steps.filter.outputs.e2e-relevant }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for file changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          frontend:
            - 'frontend/**'
          e2e-relevant:
            - 'frontend/**'
            - 'backend/**'
            - 'frontend/e2e/**'

  frontend-e2e-tests:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.e2e-relevant == 'true' || github.event_name == 'schedule' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps

    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install chromium

    - name: Build frontend for E2E tests
      run: |
        cd frontend
        npm run build

    - name: Setup Python (for backend mock server)
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh

    - name: Install backend dependencies
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        uv sync

    - name: Start backend server
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        cd backend
        uv run python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10  # Give server time to start
      
    - name: Start frontend dev server
      run: |
        cd frontend
        npm start &
        sleep 15  # Give frontend time to start
        
    - name: Run Playwright E2E tests
      run: |
        cd frontend
        npx playwright test --reporter=list

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

    - name: Upload screenshots on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots
        path: frontend/test-results/
        retention-days: 7