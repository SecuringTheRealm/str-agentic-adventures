---
name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache Python dependencies (UV)
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
          restore-keys: ${{ runner.os }}-uv-

      - name: Install Python dependencies
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv sync

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend && npm ci --legacy-peer-deps

      - name: Setup environment configuration
        run: |
          # In GitHub Actions context, environment variables should come from secrets
          # Example: Create .env file with secrets if needed by the application
          echo "Environment setup for GitHub Actions context"
          echo "# Use GitHub secrets to populate environment variables in workflows:"
          echo "#   env:"
          echo "#     API_KEY: \${{ secrets.API_KEY }}"
          echo "#     DATABASE_URL: \${{ secrets.DATABASE_URL }}"

      - name: Install development tools
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          # Python development tools are already included in pyproject.toml dev dependencies
          # Frontend development tools are managed via package.json devDependencies
          echo "âœ… Development tools available via project dependency files"