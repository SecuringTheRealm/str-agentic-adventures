# GitHub Copilot setup steps for the STR Agentic Adventures project
# This file configures the development environment for the AI Dungeon Master application
# Architecture: Python backend (Semantic Kernel) + TypeScript frontend

# Install Python dependencies using uv
- name: Install Python dependencies
  run: |
    # Install uv if not already available
    if ! command -v uv &> /dev/null; then
      curl -LsSf https://astral.sh/uv/install.sh | sh
      export PATH="$HOME/.cargo/bin:$PATH"
    fi
    
    # Install Python dependencies if pyproject.toml exists
    if [ -f "pyproject.toml" ]; then
      uv sync
    elif [ -f "requirements.txt" ]; then
      uv pip install -r requirements.txt
    fi

# Install frontend dependencies  
- name: Install frontend dependencies
  run: |
    # Check for frontend package files and install dependencies
    if [ -f "package.json" ]; then
      # Prefer npm if package-lock.json exists, otherwise use npm by default
      if [ -f "package-lock.json" ]; then
        npm ci
      elif [ -f "yarn.lock" ]; then
        yarn install --frozen-lockfile
      else
        npm install
      fi
    fi
    
    # If there's a frontend directory, check there too
    if [ -d "frontend" ] && [ -f "frontend/package.json" ]; then
      cd frontend
      if [ -f "package-lock.json" ]; then
        npm ci
      elif [ -f "yarn.lock" ]; then
        yarn install --frozen-lockfile
      else
        npm install
      fi
      cd ..
    fi

# Set up environment variables template
- name: Setup environment configuration
  run: |
    # Create .env file from template if it exists
    if [ -f ".env.example" ]; then
      cp .env.example .env
      echo "Created .env file from template. Please configure with your API keys."
    elif [ -f ".env.template" ]; then
      cp .env.template .env
      echo "Created .env file from template. Please configure with your API keys."
    fi

# Install development tools
- name: Install development tools
  run: |
    # Python development tools
    if command -v uv &> /dev/null; then
      # Install common Python development tools if pyproject.toml exists
      if [ -f "pyproject.toml" ]; then
        uv add --dev pytest black isort mypy ruff || echo "Development tools installation skipped - add them manually if needed"
      fi
    fi